
ALTER TABLE IF EXISTS acl_entry DROP CONSTRAINT IF EXISTS acl_entry_FK_1;
ALTER TABLE IF EXISTS acl_entry DROP CONSTRAINT IF EXISTS acl_entry_FK_2;

ALTER TABLE IF EXISTS acl_object_identity DROP CONSTRAINT IF EXISTS ACL_OBJECT_IDENTITY_FK_1;
ALTER TABLE IF EXISTS acl_object_identity DROP CONSTRAINT IF EXISTS ACL_OBJECT_IDENTITY_FK_2;
ALTER TABLE IF EXISTS acl_object_identity DROP CONSTRAINT IF EXISTS ACL_OBJECT_IDENTITY_FK_3;

DROP TABLE IF EXISTS acl_sid;
CREATE TABLE IF NOT EXISTS acl_sid (
  id SERIAL,
  principal SMALLINT NOT NULL,
  sid varchar(100) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT unique_uk_1 UNIQUE (sid,principal)
);

DROP TABLE IF EXISTS acl_class;
CREATE TABLE IF NOT EXISTS acl_class (
  id SERIAL,
  class varchar(255) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT unique_uk_2 UNIQUE (class)
);

DROP TABLE IF EXISTS acl_entry;
CREATE TABLE IF NOT EXISTS acl_entry (
  id SERIAL,
  acl_object_identity bigint NOT NULL,
  ace_order int NOT NULL,
  sid bigint NOT NULL,
  mask int NOT NULL,
  granting SMALLINT NOT NULL,
  audit_success SMALLINT NOT NULL,
  audit_failure SMALLINT NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT unique_uk_4 UNIQUE (acl_object_identity,ace_order)
);

DROP TABLE IF EXISTS acl_object_identity;
CREATE TABLE IF NOT EXISTS acl_object_identity (
  id SERIAL,
  object_id_class bigint NOT NULL,
  object_id_identity bigint NOT NULL,
  parent_object bigint DEFAULT NULL,
  owner_sid bigint DEFAULT NULL,
  entries_inheriting SMALLINT NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT unique_uk_3 UNIQUE (object_id_class, object_id_identity)
);

ALTER TABLE acl_entry ADD CONSTRAINT acl_entry_FK_1 FOREIGN KEY (acl_object_identity) REFERENCES acl_object_identity(id);

ALTER TABLE acl_entry ADD CONSTRAINT acl_entry_FK_2 FOREIGN KEY (sid) REFERENCES acl_sid(id);

--
-- Constraints for table acl_object_identity
--
ALTER TABLE acl_object_identity
ADD CONSTRAINT ACL_OBJECT_IDENTITY_FK_1 FOREIGN KEY (parent_object) REFERENCES acl_object_identity (id);

ALTER TABLE acl_object_identity
ADD CONSTRAINT acl_object_identity_FK_2 FOREIGN KEY (object_id_class) REFERENCES acl_class (id);

ALTER TABLE acl_object_identity
ADD CONSTRAINT acl_object_identity_FK_3 FOREIGN KEY (owner_sid) REFERENCES acl_sid (id);

------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------

ALTER TABLE IF EXISTS USER_ROLES DROP CONSTRAINT IF EXISTS USER_ROLES_FK_1;
ALTER TABLE IF EXISTS USER_ROLES DROP CONSTRAINT IF EXISTS USER_ROLES_FK_2;

DROP TABLE IF EXISTS USERS;
CREATE TABLE IF NOT EXISTS USERS (USER_NAME VARCHAR(20) NOT NULL, PASSWORD VARCHAR(100) NOT NULL, CONSTRAINT USERS_PK PRIMARY KEY (USER_NAME));

DROP TABLE IF EXISTS ROLES;
CREATE TABLE IF NOT EXISTS ROLES (ID SERIAL, NAME VARCHAR(36) NOT NULL, CONSTRAINT ROLES_PK PRIMARY KEY (ID));

DROP TABLE IF EXISTS USER_ROLES;
CREATE TABLE IF NOT EXISTS USER_ROLES (USER_NAME VARCHAR(20) NOT NULL,
                                       ROLE_ID BIGINT NOT NULL,
                                       CONSTRAINT USER_ROLES_PK PRIMARY KEY (USER_NAME, ROLE_ID),
                                       CONSTRAINT USER_ROLES_FK_1 FOREIGN KEY (USER_NAME) REFERENCES USERS(USER_NAME) ON DELETE CASCADE ON UPDATE RESTRICT,
                                       CONSTRAINT USER_ROLES_FK_2 FOREIGN KEY (ROLE_ID) REFERENCES ROLES(ID) ON DELETE RESTRICT ON UPDATE RESTRICT);

------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
ALTER TABLE IF EXISTS USER_ROLES DROP CONSTRAINT IF EXISTS USER_ROLES_FK_1;
ALTER TABLE IF EXISTS USER_ROLES DROP CONSTRAINT IF EXISTS USER_ROLES_FK_2;

ALTER TABLE IF EXISTS BOOK_GENRES DROP CONSTRAINT IF EXISTS BOOK_GENRES_FK_1;
ALTER TABLE IF EXISTS BOOK_GENRES DROP CONSTRAINT IF EXISTS BOOK_GENRES_FK_2;

ALTER TABLE IF EXISTS BOOK_AUTHORS DROP CONSTRAINT IF EXISTS BOOK_AUTHORS_FK_1;
ALTER TABLE IF EXISTS BOOK_AUTHORS DROP CONSTRAINT IF EXISTS BOOK_AUTHORS_FK_2;

ALTER TABLE IF EXISTS COMMENTS DROP CONSTRAINT IF EXISTS COMMENTS_FK_1;

DROP TABLE IF EXISTS USERS;
CREATE TABLE IF NOT EXISTS USERS (USER_NAME VARCHAR(20) NOT NULL, PASSWORD VARCHAR(100) NOT NULL, CONSTRAINT USERS_PK PRIMARY KEY (USER_NAME));

DROP TABLE IF EXISTS ROLES;
CREATE TABLE IF NOT EXISTS ROLES (ID SERIAL, NAME VARCHAR(36) NOT NULL, CONSTRAINT ROLES_PK PRIMARY KEY (ID));

DROP TABLE IF EXISTS BOOKS;
CREATE TABLE IF NOT EXISTS BOOKS (ISBN BIGINT NOT NULL, TITLE VARCHAR(100) NOT NULL, CONSTRAINT BOOKS_PK PRIMARY KEY (ISBN));

DROP TABLE IF EXISTS AUTHORS;
CREATE TABLE IF NOT EXISTS AUTHORS (ID SERIAL, FULL_NAME VARCHAR(100) NOT NULL, CONSTRAINT AUTHORS_PK PRIMARY KEY (ID));
CREATE UNIQUE INDEX U_AUTHORS_FULL_NAME ON AUTHORS (FULL_NAME);

DROP TABLE IF EXISTS GENRES;
CREATE TABLE IF NOT EXISTS GENRES (ID SERIAL, GENRE_NAME VARCHAR(100) NOT NULL, CONSTRAINT GENRES_PK PRIMARY KEY (ID));
CREATE UNIQUE INDEX U_GENRES_GENRE_NAME ON GENRES (GENRE_NAME);

DROP TABLE IF EXISTS USER_ROLES;
CREATE TABLE IF NOT EXISTS USER_ROLES (USER_NAME VARCHAR(20) NOT NULL,
                                       ROLE_ID BIGINT NOT NULL,
                                       CONSTRAINT USER_ROLES_PK PRIMARY KEY (USER_NAME, ROLE_ID),
                                       CONSTRAINT USER_ROLES_FK_1 FOREIGN KEY (USER_NAME) REFERENCES USERS(USER_NAME) ON DELETE CASCADE ON UPDATE RESTRICT,
                                       CONSTRAINT USER_ROLES_FK_2 FOREIGN KEY (ROLE_ID) REFERENCES ROLES(ID) ON DELETE RESTRICT ON UPDATE RESTRICT);

DROP TABLE IF EXISTS BOOK_AUTHORS;
CREATE TABLE IF NOT EXISTS BOOK_AUTHORS (ISBN BIGINT NOT NULL,
                                        AUTHOR_ID BIGINT NOT NULL,
                                        CONSTRAINT BOOK_AUTHORS_PK PRIMARY KEY (ISBN,AUTHOR_ID),
                                        CONSTRAINT BOOK_AUTHORS_FK_1 FOREIGN KEY (ISBN) REFERENCES BOOKS(ISBN) ON DELETE CASCADE ON UPDATE RESTRICT,
                                        CONSTRAINT BOOK_AUTHORS_FK_2 FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHORS(ID) ON DELETE RESTRICT ON UPDATE RESTRICT);

DROP TABLE IF EXISTS BOOK_GENRES;
CREATE TABLE IF NOT EXISTS BOOK_GENRES (ISBN BIGINT NOT NULL,
                                        GENRE_ID BIGINT NOT NULL,
                                        CONSTRAINT BOOK_GENRES_PK PRIMARY KEY (ISBN,GENRE_ID),
                                        CONSTRAINT BOOK_GENRES_FK_1 FOREIGN KEY (ISBN) REFERENCES BOOKS(ISBN) ON DELETE CASCADE ON UPDATE RESTRICT,
                                        CONSTRAINT BOOK_GENRES_FK_2 FOREIGN KEY (GENRE_ID) REFERENCES GENRES(ID) ON DELETE RESTRICT ON UPDATE RESTRICT);